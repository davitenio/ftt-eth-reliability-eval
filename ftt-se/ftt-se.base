// Model of FTT-SE: single switch with external master node attached.

ctmc


INCLUDE ../common.inc


// Failure rate of slave nodes.
const double slave_node_fr = 1/(6 * SEC_PER_MONTH);
// Failure rate of a node Ethernet port.
const double node_port_fr = 1/(24 * SEC_PER_MONTH);
// Failure rate of ethernet cable.
const double eth_cable_fr = 1/(48 * SEC_PER_MONTH);
// Failure rate of switch port.
const double switch_port_fr = 1/(24 * SEC_PER_MONTH);
// Failure rate of slave region.
const double slave_region_fr = slave_node_fr + node_port_fr +
	eth_cable_fr + switch_port_fr + ec_corruption_r;


// Babbling idiot failure mode probability, i.e., conditional probability that
// given that a slave region fails, the failure mode is a babbling idiot that
// causes a global failure. This may occur for example if the babbling idiot
// failure prevents TMs from reaching the slaves in time.
const double babbling_idiot_p = 0.01;
// Master impersonation failure mode probability, i.e., conditional probability
// that given that a slave region fails, the failure mode is a slave
// impersonating as a master and this causes a global failure. This may occur
// for example if a slave starts sending bogus TMs.
const double master_impersonation_p = 0.001;

// Conditional probability that a fault is contained in a slave region given
// that the slave region has failed.
const double slave_region_coverage =
    (1 - babbling_idiot_p - master_impersonation_p);

module slave_region

	// Number of non-faulty slaves.
	slave_count : [0..NUM_SLAVES] init NUM_SLAVES;
	uncovered_slave_region_fault_occurred : bool init false;

	[] slave_count >= MIN_SLAVES ->
		// Failure of a single slave that is covered.
		slave_count * slave_region_fr * slave_region_coverage:
			(slave_count'=slave_count-1) +
		// Failure of a single slave that is NOT covered.
		slave_count * slave_region_fr * (1 - slave_region_coverage):
			(slave_count'=slave_count-1) &
			(uncovered_slave_region_fault_occurred'=true);

endmodule


// Failure rate of master.
const double master_fr = 1/(12 * SEC_PER_MONTH);
// Failure rate of master cable.
const double master_cable_fr = 1/(48 * SEC_PER_MONTH);
// Failure rate of switch.
const double switch_fr = 1/(12 * SEC_PER_MONTH);
// Failure rate of switch region.
const double master_switch_region_fr = master_fr + node_port_fr +
	master_cable_fr + switch_port_fr + switch_fr + ec_corruption_r;

module master_switch_region

	master_switch_region_is_faulty : bool init false;

	[] !master_switch_region_is_faulty ->
		master_switch_region_fr : (master_switch_region_is_faulty'=true);

endmodule


// Number of required slaves for correct operation is exhausted.
formula slaves_exhausted = (slave_count<MIN_SLAVES);
// The system has suffered a failure.
formula sys_failure = slaves_exhausted | master_switch_region_is_faulty |
    uncovered_slave_region_fault_occurred;

// We need a label version of sys_failure because parametric
// model checking only works with labels and not with formulas.
label "sys_fail" = sys_failure;

INCLUDE ../rewards.inc
